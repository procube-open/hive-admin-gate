---
- name: provisioing tenant to Access Manager
  hosts: tenants
  gather_facts: False
  serial: 1
  vars:
    ansible_connection: docker
    ansible_python_interpreter: /usr/bin/python3

  pre_tasks:
  - name: get Swarm task@node for amdb
    delegate_to: localhost
    shell: "docker -H tcp://{{ first_hive }}:2376 --tls service ps --format \"{% raw %}{{.Name}}.{{.ID}}@{{.Node}}{% endraw %}.{{ hive_name }}\" --filter desired-state=running --no-trunc amdb | head -1"
    changed_when: False
    check_mode: False
    failed_when: hive_safe_ps_amdb.stdout == ''
    register: hive_safe_ps_amdb
    vars:
      ansible_connection: local
  - name: get Swarm task@node for am
    delegate_to: localhost
    shell: "docker -H tcp://{{ first_hive }}:2376 --tls service ps --format \"{% raw %}{{.Name}}.{{.ID}}@{{.Node}}{% endraw %}.{{ hive_name }}\" --filter desired-state=running --no-trunc {{ amid }} | head -1"
    changed_when: False
    check_mode: False
    failed_when: hive_safe_ps_am.stdout == ''
    register: hive_safe_ps_am
    vars:
      ansible_connection: local
  - name: get Swarm task@node for wg
    delegate_to: localhost
    shell: "docker -H tcp://{{ first_hive }}:2376 --tls service ps --format \"{% raw %}{{.Name}}.{{.ID}}@{{.Node}}{% endraw %}.{{ hive_name }}\" --filter desired-state=running --no-trunc webgate | head -1"
    changed_when: False
    check_mode: False
    failed_when: hive_safe_ps_wg.stdout == ''
    register: hive_safe_ps_wg
    vars:
      ansible_connection: local
  roles:
  - vars:
      ansible_docker_extra_args: "-H tcp://{{ hive_safe_ps_amdb.stdout.split('@') | last }}:2376 --tls"
      ansible_host: "{{ hive_safe_ps_amdb.stdout.split('@') | first }}"
      ansible_connection: docker
    role: amdb-init
    when: prov_operation | default('create') != 'delete'
  - vars:
      ansible_docker_extra_args: "-H tcp://{{ hive_safe_ps_am.stdout.split('@') | last }}:2376 --tls"
      ansible_host: "{{ hive_safe_ps_am.stdout.split('@') | first }}"
      ansible_connection: docker
    role: am-init
    when: prov_operation | default('create') != 'delete'
  - vars:
      ansible_docker_extra_args: "-H tcp://{{ hive_safe_ps_am.stdout.split('@') | last }}:2376 --tls"
      ansible_host: "{{ hive_safe_ps_am.stdout.split('@') | first }}"
      ansible_connection: docker
    role: am-delete
    when: prov_operation | default('create') == 'delete'
  - vars:
      ansible_docker_extra_args: "-H tcp://{{ hive_safe_ps_amdb.stdout.split('@') | last }}:2376 --tls"
      ansible_host: "{{ hive_safe_ps_amdb.stdout.split('@') | first }}"
      ansible_connection: docker
    role: amdb-delete
    when: prov_operation | default('create') == 'delete'
  - vars:
      ansible_docker_extra_args: "-H tcp://{{ hive_safe_ps_wg.stdout.split('@') | last }}:2376 --tls"
      ansible_host: "{{ hive_safe_ps_wg.stdout.split('@') | first }}"
      ansible_connection: docker
    role: webgate-init
  post_tasks:
  - pause:
      seconds: 0
      prompt: "=== END OF TEXT OUTPUT ==="
