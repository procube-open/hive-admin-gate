---
- name: Provisioning to user account.
  hosts: users
  gather_facts: false
  serial: 1
  vars:
    ansible_connection: local
    ansible_python_interpreter: /root/prov/bin/python
    username: guacadmin
    password: guacadmin

  tasks:
  - name: message
    debug:
      msg: "Provisioning to user account."
  - name: Get token of REST API.
    uri:
      url: "http://guacamole:8080/guacamole/api/tokens"
      headers:
        Content-Type: "application/x-www-form-urlencoded"
      method: POST
      body: 'username={{ username }}&password={{ password }}'
      validate_certs: false
      return_content: yes
      status_code: 200
    register: token
  - name: output token
    debug:
      msg: "{{ token.json.authToken }}"
  - name: Get Users.
    uri:
      url: "http://guacamole:8080/guacamole/api/session/data/postgresql/users"
      headers:
        Guacamole-Token: "{{ token.json.authToken }}"
      method: GET
      validate_certs: false
      return_content: yes
      status_code: 200
    register: users
  - name: Make userid list.
    set_fact:
      userid: "{{ users.json.keys() }}"
  - name: Get Connections.
    uri:
      url: "http://guacamole:8080/guacamole/api/session/data/postgresql/connections"
      headers:
        Guacamole-Token: "{{ token.json.authToken }}"
      method: GET
      validate_certs: false
      return_content: yes
      status_code: 200
    register: connections
  - name: Make connectionid list.
    set_fact:
      connectionid: "{{ connections.json.keys() }}"
  - name: Put User.
    uri:
      url: "http://guacamole:8080/guacamole/api/session/data/postgresql/users/{{ uid | regex_replace('@', '%40') }}"
      headers:
        Guacamole-Token: "{{ token.json.authToken }}"
        Content-Type: "application/json;charset=UTF-8"
      method: PUT
      body_format: json
      body: '{"username":"{{ uid }}","password":"","attributes": {"expired": "","guac-full-name": "{{ cn }}","timezone": null,"access-window-start": "","access-window-end": "","disabled": "","valid-until": "","valid-from": ""}}'
      validate_certs: false
      status_code: 204
    when: "prov_operation != 'delete' and uid in userid"
  - name: Post User.
    uri:
      url: "http://guacamole:8080/guacamole/api/session/data/postgresql/users"
      headers:
        Guacamole-Token: "{{ token.json.authToken }}"
        Content-Type: "application/json;charset=UTF-8"
      method: POST
      body_format: json
      body: '{"username":"{{ uid }}","password":"","attributes": {"expired": "","guac-full-name": "{{ cn }}","timezone": null,"access-window-start": "","access-window-end": "","disabled": "","valid-until": "","valid-from": ""}}'
      validate_certs: false
      status_code: 200
    when: "uid not in userid"
  - name: Add system permission.
    uri:
      url: "http://guacamole:8080/guacamole/api/session/data/postgresql/users/{{ uid | regex_replace('@', '%40') }}/permissions"
      headers:
        Guacamole-Token: "{{ token.json.authToken }}"
        Content-Type: "application/json"
      method: PATCH
      body_format: json
      body: '[{"op": "add", "path": "/systemPermissions", "value": "ADMINISTER"}]'
      validate_certs: false
      status_code: 204
    when: "prov_operation != 'delete' and uid in userid"
  - name: Delete User.
    uri:
      url: "http://guacamole:8080/guacamole/api/session/data/postgresql/users/{{ uid | regex_replace('@', '%40') }}"
      headers:
        Guacamole-Token: "{{ token.json.authToken }}"
      method: DELETE
      validate_certs: false
      status_code: 204
    when: "prov_operation == 'delete' and uid in userid"
  - name: Make cnection pemissions.
    set_fact:
      connection_permissions: "{{ connection_permissions | default([]) +  [{'op': 'add', 'path': '/connectionPermissions/' ~ item, 'value': 'READ'}] }}"
    loop: "{{ connectionid }}"
  - name: Register cnection pemissions.
    uri:
      url: "http://guacamole:8080/guacamole/api/session/data/postgresql/users/{{ uid | regex_replace('@', '%40') }}/permissions"
      headers:
        Guacamole-Token: "{{ token.json.authToken }}"
        Content-Type: "application/json"
      method: PATCH
      body_format: json
      body: '{{ connection_permissions | to_json }}'
      validate_certs: false
      status_code: 204
    when: "uid not in userid and connection_permissions is defined"
