# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.file_status import FileStatus  # noqa: F401,E501
from swagger_server import util


class SpoolList(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, result: str=None, failed_data: str=None, data: List[FileStatus]=None):  # noqa: E501
        """SpoolList - a model defined in Swagger

        :param result: The result of this SpoolList.  # noqa: E501
        :type result: str
        :param failed_data: The failed_data of this SpoolList.  # noqa: E501
        :type failed_data: str
        :param data: The data of this SpoolList.  # noqa: E501
        :type data: List[FileStatus]
        """
        self.swagger_types = {
            'result': str,
            'failed_data': str,
            'data': List[FileStatus]
        }

        self.attribute_map = {
            'result': 'result',
            'failed_data': 'failedData',
            'data': 'data'
        }
        self._result = result
        self._failed_data = failed_data
        self._data = data

    @classmethod
    def from_dict(cls, dikt) -> 'SpoolList':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SpoolList of this SpoolList.  # noqa: E501
        :rtype: SpoolList
        """
        return util.deserialize_model(dikt, cls)

    @property
    def result(self) -> str:
        """Gets the result of this SpoolList.

        成功時は completed 、失敗時は failed が設定される  # noqa: E501

        :return: The result of this SpoolList.
        :rtype: str
        """
        return self._result

    @result.setter
    def result(self, result: str):
        """Sets the result of this SpoolList.

        成功時は completed 、失敗時は failed が設定される  # noqa: E501

        :param result: The result of this SpoolList.
        :type result: str
        """
        allowed_values = ["completed", "failed"]  # noqa: E501
        if result not in allowed_values:
            raise ValueError(
                "Invalid value for `result` ({0}), must be one of {1}"
                .format(result, allowed_values)
            )

        self._result = result

    @property
    def failed_data(self) -> str:
        """Gets the failed_data of this SpoolList.

        result が failed の場合のみ、エラーメッセージが設定される  # noqa: E501

        :return: The failed_data of this SpoolList.
        :rtype: str
        """
        return self._failed_data

    @failed_data.setter
    def failed_data(self, failed_data: str):
        """Sets the failed_data of this SpoolList.

        result が failed の場合のみ、エラーメッセージが設定される  # noqa: E501

        :param failed_data: The failed_data of this SpoolList.
        :type failed_data: str
        """

        self._failed_data = failed_data

    @property
    def data(self) -> List[FileStatus]:
        """Gets the data of this SpoolList.

        result が completed の場合で action がimport の場合のみファイルの一覧が設定される  # noqa: E501

        :return: The data of this SpoolList.
        :rtype: List[FileStatus]
        """
        return self._data

    @data.setter
    def data(self, data: List[FileStatus]):
        """Sets the data of this SpoolList.

        result が completed の場合で action がimport の場合のみファイルの一覧が設定される  # noqa: E501

        :param data: The data of this SpoolList.
        :type data: List[FileStatus]
        """

        self._data = data
